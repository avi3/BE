/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package java_5774_5999_2188_gui;


import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import person.Friend;
import person.NotFriend;
import person.User;

/**
 *
 * @author חיים
 */
public class friends extends javax.swing.JFrame {

    User user;
    List<Friend> friends;
    List<NotFriend> users;
    int showing; //0 is all users, 1 is friends only
    /**
     * Creates new form friends
     */
    public friends(User me) {
        initComponents();
        try {
            user = me;
       showing = 1;
       updateTable();
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }

    
    public void updateTable() {
        List<Friend> tmp = new ArrayList<>();
        List<NotFriend> tmp2 = new ArrayList<>();
        if (showing == 1) {
            for (Friend f : login.dataBase.GetUserFriends(user.getId())) {
                if (f.getId() != user.getId())
                    tmp.add(f);
            }
            friends = tmp;
        FriendsModel model = new FriendsModel(friends);
        friendsTable.setModel(model);
        showingInfo.setText("Showing only your friends.");
        invite.setVisible(false);
        invite.setEnabled(false);
        }
        else {
            for (NotFriend f : login.dataBase.getAllAsNotFriend()) {
                if (f.getId() != user.getId())
                    tmp2.add(f);
            }
            users = tmp2;
          NotFriendModel model = new NotFriendModel(users, user);
        friendsTable.setModel(model);
        
        showingInfo.setText("Showing all users.");
        invite.setVisible(true);
        invite.setEnabled(true);
        }
  friendsTable.getSelectionModel().setSelectionInterval(-1, -1);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        friendsTable = new javax.swing.JTable();
        showFriends = new javax.swing.JButton();
        showAll = new javax.swing.JButton();
        showingInfo = new javax.swing.JLabel();
        invite = new javax.swing.JButton();
        showCodes = new javax.swing.JButton();
        backbutton = new javax.swing.JButton();
        logo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        friendsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Email", "# of codes", "ONLINE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        friendsTable.setToolTipText("Click on a user to see his codes");
        jScrollPane1.setViewportView(friendsTable);

        showFriends.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        showFriends.setText("My Friends");
        showFriends.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showFriendsActionPerformed(evt);
            }
        });

        showAll.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        showAll.setText("Show all Users");
        showAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAllActionPerformed(evt);
            }
        });

        showingInfo.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        showingInfo.setText("jLabel1");

        invite.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        invite.setText("Invite this user to be your friend!");
        invite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inviteActionPerformed(evt);
            }
        });

        showCodes.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        showCodes.setText("Show user codes");
        showCodes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showCodesActionPerformed(evt);
            }
        });

        backbutton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        backbutton.setText("Back");
        backbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbuttonActionPerformed(evt);
            }
        });

        logo.setBackground(new java.awt.Color(153, 153, 255));
        logo.setFont(new java.awt.Font("Aharoni", 1, 48)); // NOI18N
        logo.setForeground(new java.awt.Color(255, 255, 255));
        logo.setText("Filesbook");
        logo.setOpaque(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(invite, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(showFriends, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(showAll, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                                .addComponent(showCodes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addComponent(showingInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 64, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addComponent(showingInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(showFriends, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(showAll, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(showCodes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(invite, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(backbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void showFriendsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showFriendsActionPerformed
       try {
       
        showing = 1;
        updateTable();
       }
       catch (Exception e) {
           JOptionPane.showMessageDialog(null, e.getMessage());
       }
    }//GEN-LAST:event_showFriendsActionPerformed

    private void showAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAllActionPerformed
      try {
         showing = 0;
        updateTable();
      }
      catch (Exception e) {
          
      }
        
    }//GEN-LAST:event_showAllActionPerformed

    private void inviteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inviteActionPerformed
        try {
            if (friendsTable.getSelectedRow() < 0)
                throw new Exception("no user selected");
            int invitedId;
            String name;
            /*if (showing == 1) {
                invitedId = friends.get(friendsTable.getSelectedRow()).getId();
                name = friends.get(friendsTable.getSelectedRow()).getUsername();
            }
            else {*/
                invitedId = users.get(friendsTable.getSelectedRow()).getId();
                name = users.get(friendsTable.getSelectedRow()).getUsername();
            //}
            login.dataBase.invite(user.getId(), invitedId);
            JOptionPane.showMessageDialog(null, "invitation to " + name + " was sent!");
            updateTable();
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_inviteActionPerformed

    private void showCodesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showCodesActionPerformed
         try {
            if (friendsTable.getSelectedRow() < 0)
                throw new Exception("no user selected");
            boolean showIsFriend;
            int id;
            if (showing == 1) {
                showIsFriend = true;
                id = friends.get(friendsTable.getSelectedRow()).getId();
            }
            else {
                showIsFriend = false;
                id = users.get(friendsTable.getSelectedRow()).getId();
                for (Friend f : user.getFriends()) {
                    if (f.getId() == id)
                        showIsFriend = true;
                }
                
                
            }
                 Codes show = new Codes(id, user.getId(), false, showIsFriend);
                show.setVisible(true);
            }
catch (Exception e) {
    JOptionPane.showMessageDialog(null, e.getMessage());
}
    }//GEN-LAST:event_showCodesActionPerformed

    private void backbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbuttonActionPerformed
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_backbuttonActionPerformed
    
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backbutton;
    private javax.swing.JTable friendsTable;
    private javax.swing.JButton invite;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel logo;
    private javax.swing.JButton showAll;
    private javax.swing.JButton showCodes;
    private javax.swing.JButton showFriends;
    private javax.swing.JLabel showingInfo;
    // End of variables declaration//GEN-END:variables
}
